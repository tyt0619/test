奠基时期技术发展
1969年C.WeissmanAdept-50 第一个分时安全操作系统
1969年B.W.Lampson第一次对访问控制问题进行了抽象，提出：主体（subject
）
客体（object）访问矩阵（access matrix）
1972年J.P.Anderson提出参考监控器（reference monitor
）、访问验证机制（reference validation mechanism）、安全内核（security kernel）和安全建模（modeling）等思想
1973年B.W.Lampson提出了隐蔽通道（covert channel）
1973年D.E.Bell和L.J.LaPadula提出BLP模型第一个可证明的安全系统的模型形式化描述、非形式化说明，在Multics中的实现说明
1975年J.H.Saltzer
和M.D.Schroeder“The protection of information in computer systems”考察了权能和访问控制列表的实现结构信息保护机制的8条设计原则
1976年M.A.Harrison、W.L.Ruzzo、J.D.Ullman提出HRU理论保护系统模型

以Multics为代表的早期安全操作系统
Multics：最早尝试
BLP模型的提出
保护环
2000年停用
从头开始设计
GEMSOS（安全内核）：A1级，延续至今
PSOS（只有设计）：权能、HDM、形式化规范验证
Adept-50（high water mark）
KSOS（模拟UNIX接口）：美国防部发起，Ford公司承担
基于现成OS开发
KVM/370：IBM
UCLA Secure UNIX：美国防部发起，UCLA承担
DEC OS

TCSEC时期安全操作系统发展
1983年NSA发布TCSEC，D-A1七个评估等级
1984年AXIOM的S.Kramer开发基于Unix的LINUS IV，以BSD UNIX为原型，达B2级
1986年IBM 的V.D.Gligor设计安全Xenix，目标B2-A1实现基于SAK键的可信路径UNIX类：仿真法、改造增强法保证方法方面：模型与设计的一致性、功能测试、配置管理工具
1987年TIS公司开发B3级Tmach，将BLP用于微内核中
1989年加拿大多伦多大学，安全TUNIS，目标B3-A1，与UNIX兼容-采用强类型语言Turing Plus-安全策略与安全机制相分离
1990年TRW公司ASOS，军用系统，设计目标是A1Ada语言实现ACL/BLP/Biba模型、顶层规范的形式化规范及验证GVE验证环境

CC之后的安全操作系统发展
1991年英、德、法、荷发布ITSEC，欧共体国家使用评估等级E0~E6安全目标
1996年美及欧共体CC 1.0发布1999年，成为国际标准ISO/IEC 15408，当前仍在更新中重要概念：TOE、PP、ST、EAL安全功能是可扩成的集合目前最新版本：CC V3.1.Release 4
1993年NSA、SCC、犹他州大学DTMach、DTOS、Flask分布式环境、动态安全策略DTOS：采用基于安全威胁的开发方法（目标：策略灵活性、与Mach兼容、性能与Mach相当）
2001年NSASELinux，采用Flask结构实现安全服务器，实现安全策略的独立性定义了一套基于TE、RBAC、IBAC、MLS的混合策略语言其它，TrustedBSD（MAC框架sebsd）、SolarisTrusted Extensions（Zone）
1999年宾州大学EROS 基于权能的微内核系统（前身：KeyKOS）后续：Coyotos（BitC实现）、CapROS（商用版本）

当前安全操作系统
关键词
微内核、虚拟机
基于权能的操作系统
强类型检查语言
Separation kernel
系统
SeL4
微软singularity、Midori
RTOS、INTEGRITY-178B…

大纲
国际操作系统安全发展历程
国际操作系统评估标准规范
我国现行操作系统安全制度
与标准我国安全操作系统发展历程

国际安全评估标准的发展

TCSEC的产生
TCSEC：1983–1999
前期工作
20世纪60年代后期，1967年美国防部（DOD）成立一个研究组，对当时计算机使用环境中的安全策略进行研究
70年代后期DOD对当时流行的KSOS、PSOS、KVM进行了安全方面的研究
美国NCSC   DoD开发，橘皮书，彩虹系列之一
使用TCB概念，受BLP模型及参考监控器影响大
针对军事领域，很难用于商业产品评估
功能与保证呈线性
定义安全的四个方面
安全策略、可追溯性、安全保障和文档

TCSEC分级
D级：最小保护级
C级：自主保护级C1自主保护DAC、IA、应保护TCB免受外部破坏（自主访问控制）（Unix）
C2受控访问保护客体重用，审计，更严格的安全测试（较完善的DAC、审计）（Windows NT 4.0）
B级：强制保护级B1标签安全保护级非形式化的安全策略模型；命名对象的MAC；外出对象的标签；更严格的安全测试（BLP）
B2结构化保护级形式化安全策略模型；所有对象的MAC，标签；可信路径；最小特权；隐蔽信道分析，配置管理（良好的结构化设计、形式化安全模型）
B3安全域保护级满足访问监控器三项要求；系统恢复过程；受限的代码开发；更多文档要求（全面访问控制、可信恢复）
A级：验证保护级A1验证设计保护级功能要求同B3，但要求使用形式化方法作为保证
；
可信分发；代发与形式化顶层规范相对应（形式化认证）

通过美国家计算机安全中心评测的系统

通过美NSA
评测的系统

TCSEC与CC间的过渡规范
德国绿皮书
8个安全功能：标识与鉴别、权限管理、权限验证、审计、客体重
用、错误校正（数据完整性）、服务连续性（可用性）、数据通信安全（通讯安全）
定义了Q0-Q7八个质量级别
如：Q6：必须形式化验证满足所有安全策略模型的要求，需对源代码进行精确分析
功能类和保护等级可任意组合
首次提出安全目标的概念
FC（美国联合联邦准则）
由NIST和NSA联合制定，仿效ITSEC
引入
保护轮廓（protection profile）：用户的保护需求，对要求的抽象描述
安全目标（security target）：开发商将保护轮廓映射为安全目标，是评估的基础。详细说明如何在具体产品中满足这些要求

CC标准
Common Criteria: 1998–现在
国际标准ISO/IEC 15408，我国GB/T-18336
定义了作为评估信息技术产品和系统安全性的基础准
则，面型系统的用户、开发者和评估者
CC的范围
不涉及管理细节、具体的实现算法和评估方法
概况
US, UK, Canada, France, Germany提出
在美国取代TCSEC
不提供一个安全特性列表
描述了一个安全需求可被规范、声明、评估的框架

CC标准
核心概念
TOE（评估对象）：待评估的产品或系统
PP（保护轮廓）：标识与一个用户群体某特定关切相
关的安全需求的文档
ST（安全目标）：标识系统被评估的安全属性集合的
文档
EAL（评估保证级）：1-7 标明评估中保证需求被满足
的程度
CC出台原因
国际计算机市场发展趋势
早期标准的演变和修订
国家间一般性安全需求
新时期系统安全的问题和挑战

CC的使用范围
定义了评估信息技术产品和系统安全性所需的基本准
则
针对在安全评估过程中信息技术产品和系统安全功能
及相应的保护措施提出一组通用要求，使各种相对独
立的安全评估结果具可比性
有助于产品和系统的开发者或用户分析产品或系统对
应用是否足够安全，使用中存在的安全风险是否可以
容忍
除机密性、完整性、可用性外，也考虑可控性、可追
溯性
目标是用户、开发者、评估者

CC内容的组织
第一部分：简介和一般模型
总体介绍
一般概念和原理
评估的一般模型
IT安全要求
PP和ST原理和内容
安全功能要求
功能类
功能子类
功能组件
详细要求安全保证要求
保证类
保证子类
保证组件
详细的要求
评估保证等级

CC安全功能要求
Security Audit
Communication
Cryptographic 
Support
User Data 
ProtectionIdentification 
and 
AuthenticationSecurity 
ManagementPrivacyProtection of 
Security 
FunctionsResource 
Utilization
TOE Access
Trusted Path

CC安全保证要求
Protection 
Profile 
Evaluation
Security Target 
Evaluation
Configuration 
Management
Delivery and 
OperationDevelopmentGuidance 
DocumentationLife CycleTestsVulnerabilities 
Assessment
Maintenance 
of Assurance

CC安全功能/
保证的分级定义

CC的EAL保证级

CC的PP

CC的ST

TOE、PP、ST关系

安全概念和关系

需
求
及
规
范
的
产
生

PP
内
容

ST
内
容

根据CC评测的系统案例

大纲
国际操作系统安全发展历程
国际操作系统评估标准规范
我国现行操作系统安全制度与
标准我国安全操作系统发展历程

我国早期安全操作系统
1993年海军计算技术研究所围绕UNIX SVR4.2/SE实现安全增强包，面向B2
1995年中软、海军计算技术研究所、软件所COSIX V2.0安全子系统设计（B1-B2）
1996年国防科工委GJB 2646-1996 军用计算机安全评估准则，与TCSEC基本一致
1998年电子部15所基于UNIXWare V2.1安全增强，目标B1
1999年国家技术监督局发布GB 17859-1999《计算机信息系统安全保护等级划分准则》
2002年公安部GA 388-2002
2006年国家技术监督局GB/T 20272       (GB/T 20271)

GB 17859后的安全操作系统
中科院信息安全中心2001年安胜3.0基于Linux（国内首个通过评测的安全操作系统）
2005年安胜4.0 基于Linux（除安全机制外，还在安全策略的形式化规范与验证、隐蔽信道分析方面进行了有开创性的工作）
南大苏福特SoftOS
国防大学2006年银河麒麟操作系统，第四级
中科方德2007年基于FreeBSD的三级方德方舟NFSARK 1.0（在FreeBSD上实现三级系统，将SELinux引入20272）
2010年基于Linux的四级方德方舟NFSARK 2.0（针对服务器版本
、
桌面版本都进行了工作、形式化、隐蔽信道分析）
其它中标软中标麒麟

大纲
国际操作系统安全发展历程
国际操作系统评估标准规范
我国现行操作系统安全制度与
标准我国安全操作系统发展历程

信息安全等级保护制度
法律基础
1994年《中华人民共和国计算机信息系统安全保护条
例》
发布的目的
从整体上形成多级信息系统安全保护体系
提高国家信息系统安全保护能力
针对信息系统脆弱性和计算机犯罪

信息安全等级保护制度
信息安全等级保护
定义
对信息和信息载体按照重要性等级分级别进行保护的一种工作
工作内容
定级、备案、安全建设和整改、信息安全等级测评、信息安全检查
信息系统安全等级测评
验证信息系统是否满足相应安全保护等级的评估过程

信息安全等级保护制度
分级

信息安全等级保护政策体系

等级保护制度的标准体系

相关标准
计算机信息系统安全保护等级划分准则
配套标准
计算机信息安全保护等级划分准则应用指南
技术指南、建设指南、管理指南
计算机信息安全保护等级评估准则应用指南
操作系统、数据库、防火墙、路由器、身份认证管理
1999年颁布，2001年执行
为计算机信息系统安全法规和配套标准的制定以及执
法部门监督检查提供依据
为安全产品的研发提供技术支持
为信息系统的建设和管理提供技术指导

我国的信息安全标准体系
基础类标准
信息技术安全术语，信息技术安全体系结构，信息技术安全框架
（GB9387-2，等同ISO7498-2），信息技术安全模型
技术机制类标准
加密，签名，完整性，鉴别，访问控制，抗抵赖，路由选择控制，
通信业务填充，事件监测和报警，安全审计追踪，安全标记，安
全恢复
应用类标准
物理环境和保障、信息处理、传输和存储、计算机病毒防治等应
用基础商用密码、防火墙、应用代理、安全路由器等应用产品电子商务、电子政务、涉密系统、金融处理等应用系统金融服务等特殊行业的安全标准
安全管理类标准
管理基础，系统管理，测评认证

操作系统评估准则
我国GB 17859
参考TCSEC制定
作用
我国信息系统安全等级保护系列标准的核心
实行等级保护制度的重要基础
信息安全评估和管理的重要基础
规定了五个级别
第一级：用户自主保护级
第二级：系统审计保护级
第三级：安全标记保护级
第四级：结构化保护级
第五级：访问验证保护级
2015/9/14

操作系统评估准则
12345
自主访问控制*****
身份鉴别*****
数据完整性*****
客体重用****
审计****
强制访问控制***
标记***
隐蔽信道分析**
可信路径**
可信恢复*
2015/9/14

操作系统评估准则
GB/T 20272
与GB 17859保持一致
在17859的框架下，参考CC标准进行了描述
与20271配套使用
要求描述更细致
更易于评估
增加了对可信计算机自身安全保护的要求
单独进行安全保证需求的描述
2015/9/14

GB/T 20272
安全功能
身份鉴别
自主访问控制
标记
强制访问控制
数据流控制
安全审计
用户数据完整性
用户数据机密性
可信路径

GB/T 20272
SSOSS自身安全保护
SSF物理安全保护
SSF运行安全保护
SSF数据安全保护
资源利用
SSOSS访问控制

GB/T 20272
SSOSS设计与实现
配置管理
分发与操作
开发
文档要求
生命周期支持
测试
脆弱性评定
SSOSS安全管理

小结
国际发展历程
奠基期：BLP、访问监控器、HRU….，系统multics
TCSEC时期：Xenix、Tmach
CC之后：DTOS、Flask
、EROS
当前：SeL4
评估标准
TCSEC
CC
我国情况
等级保护制度
GB 17859
GB/T 20272

目标系统
安全服务器操作系统
面向GB/T 20272 四级（结构化保护级）要求
作为典型服务器的运行平台
如：运行ftp服务、http服务、邮件服务、DNS服务、DHCP服务的服务器
说明
安全操作系统产品开发
最终部署的服务器应用系统是不确定的
保证服务可部署
•可正常运行
•可通过正确的策略配置、正确使用安全接口受到系统安全机制的保护
服务器一般需要不间断运行
正常功能、一般性的系统维护不需重启系统、中断服务

系统结构示意图

系统用户态说明
用户态：非特权级
初始化服务
在系统启动或模式切换过程中进行系统初始化及配置的程序
系统运行服务
在系统正常运行状态下为普通程序提供管理员访问远程连接、日志、自动任务执行、打印等服务功能的程序
实用程序
为登录到系统中的用户提供
应用服务程序
部署在安全服务器操作系统之上的应用负载
用户态与内核的交互
系统调用、伪文件系统、伪设备、netlink、sysctl等
用户可访问的系统资源
CPU处理资源、内存资源、磁盘存储资源、网络带宽资源、系统输入输出设备资源（如显示器、键盘等）

系统安全威胁
恶意代码
授权用户
、IT系统或系统入侵者下载并执行
破坏系统的完整性、保密性、可用性
缺陷代码
假设：由用户态程序引入
可能会任意修改用户或TSF数据
造成其非授权使用系统或者其他安全威胁
管理失误&管理员恶意修改
管理员管理时出现失误
非授权用户可以泄漏、修改或删除敏感数据
单个授权管理员恶意修改组织安全目的或者修改系统配置

系统安全威胁
用户权限滥用：
用户滥用被授予的权限以便
不正当地收集敏感或者重要数据
不正当地修改或破坏敏感或者重要数据
不正当地发送敏感或重要数据
用户失误：
用户在操作时失误
导致信息泄漏给不适当的人或者地方
偶然删除用户数据或者修改系统数据
或者提交错误信息导致系统产生错误行为等
 。
非授权访问
用户数据可能会被其他用户在未授权的情况下访问
包括查看、修改和删除等
 。

系统安全威胁
无人值守的会话：
用户可能会在未授权的情况下访问一个无人值守的会话
 。
欺骗：
恶意的用户、进程或者外部IT实体为了获取身份鉴别数据
而伪装自己
 。
审计文件泄漏
恶意用户和进程能够查看审计记录
审计记录丢失或被修改
停止记录今后的审计信息，从而导致无法审计用户行为

系统安全威胁
配置文件泄漏：
恶意用户和进程能够查看配置并修改配置文件，影响
整个系统的安全策略的实施
 。
信息残留
用户或者进程能够在系统资源从一个用户或进程分配
或者再分配给另外一个用户或进程时非法访问该资源
中存在的残余信息
 。
电力中断
不可预料的系统或组件电力中断，导致系统信息丢失
或丧失保护

标准要求分析
安全功能
供谁使用
管理员、用户、部署在系统上的应用服务
保护什么
涉及了用户登录前准备、用户登录、对用户在系统中的行为的控制、系统安全审计、用户数据全生命周期机密性完整性保护的整个过程。
如何实现
适当的安全机制+正确的系统配置
SSOOS自身安全保护
包括什么
SSF物理安全保护、SSF运行安全保护、SSF数据安全保护、系统资源利用、SSOOS访问控制
系统安全机制在为最终用户提供安全保护的同时，也为系统自身提供安全保护

标准要求分析
SSOOS设计与实现
包括什么
配置管理、分发与操作、开发、文档要求、生存周期支持、测试、脆弱性评定
实质
从系统研发及维护过程、独立的测试及脆弱性评定的角度，对开发者保证系统开发、运行的安全责任及必须执行的措施提出要求
具体要求
开发者制定的研发及维护过程的规范，以及其执行情况；
相对中立的独立测试及脆弱性评定方面及其结果；
足以指导用户使用系统的详尽的文档；
系统的默认配置
SSOOS安全管理
线下管理要求

标准要求的细化——用户标识与鉴别
提供用户标识功能
包括用户及代表用户的进程的标识
用户标识至少包括UID及用户名
UID及用户名在系统生命周期内唯一。
采用多鉴别机制实现用户身份鉴别
用户进入系统的方式：
本地终端登录、远程SSH登录
提供的认证机制
系统提供强化口令认证、基于UKEY数字证书身份认证（UKEY认证），系统安装后默认实施。
对鉴别信息提供存储、传输时的保护
提供用户-主体绑定的机制
进程与所有者用户绑定
且审计时能记录进程的所有者用户

标准要求的细化——自主访问控制
需提供细粒度的自主访问控制机制
提供ACL形式的DAC
权限到单个用户
权限由客体属主确定
•系统管理员不能修改
•属主不能授权他人修改
客体被创建时
•有默认访问控制策略
访问控制属性：至少包括读写执行
与其他机制有机结合
身份标识与鉴别
•确保用户身份真实性
安全审计
•可记录成功、不成功的访问

标准要求的细化——标记
需提供针对主客体的标记功能
要求
为所有主客体确定安全标记
•包括多级安全属性
用于实现强制访问控制策略
提供途径设置标签
•缺省标签确定逻辑
•提供安全管理员使用的标签设置工具
带标记的输入输出
•带标记的输出
•输入时需按规则确定安全标签
需明确的对象
什么是系统中的主体？
什么是系统中的客体？
系统的输入输出方式有哪些？

标准要求的细化——强制访问控制
提供强制访问控制机制
范围
涉及系统所有主体、客体
对客体的控制范围：信息的存储、处理、传输、输入、输出操作
与其它安全机制有机配合
标识与鉴别、标记
支持网络环境下统一的强制访问控制
标签设置的一致性；跨网络的用户数据保护
管理：由安全管理员统一管理
实现三权分立
•系统管理员：系统常规管理
•安全管理员：负责强制访问控制等安全机制管理
•审计管理员：审计管理
最小特权、职能分割制约：强制访问控制辅助实现？

标准要求的细化——数据流控制
？？什么是以数据流方式实现数据交换的操作系统？
文件读写方式算吗？
网络传送方式算吗？
高层网络服务算吗？
Anyway
针对文件读写
提供基于BLP的强制访问控制
提供基于Biba的强制完整性访问控制
针对网络传输
加密方式实现隔离

标准要求的细化——安全审计
审计机制与其它安全机制的有机配合
能够审计各安全机制管理操作、控制操作
审计日志中记录相关主客体的安全属性等安全上下文
将安全上下文作为审计事件记录、查看的过滤条件
能够记录的审计事件
登录及建立会话的过程（无论成功与否）
使用系统接口（系统调用）
系统数据库管理（如用户帐号修改、审计配置及记录文件保护、设置进程UID、添加删除修改系统程序、修改日期和时间）
对文件及其他客体打开、访问、管理、操作、删除等操作
各管理员及其进程的管理操作
审计日志要素
事件发生的日期时间、触发事件的用户、事件类型、事件的结果（成功、失败）
对登录事件，应记录登录源地点（端口、IP地址）；
对创建、删除客体的操作，应记录客体名称及安全属性。

标准要求的细化——安全审计（续）
安全审计的管理维护
审计机制的保护
审计过程的完整性保护
•审计系统被授权的管理员开启、关闭
•审计策略由审计管理员配置
•强制访问控制机制保护审计相关的程序、数据、进程
审计日志数据的机密性、完整性保护
•只有授权用户能够使用审计工具查看、使用、修改、删除审计数据
–强制访问控制保护
–日志数据的加密保护
管理员能够定义审计日志处理能力极限值，并定义在存储空间耗尽时应急响应措施，并按照设定值进行处理
•报警并丢弃未记录的信息、暂停审计、覆盖早期审计记录

标准要求的细化——安全审计（续）
审计数据的使用
实时报警
违例进程终止机制
异常响应
简单攻击探测
•定义攻击事件的日志模式
异常检测
•收集用户行为特征
潜在侵害分析
•保护系统关键数据、程序

标准要求的细化——用户数据的机密性、完整性保护
基于标记、强制访问控制的完整性保护
完整性保护
完整性标签、半形式化的完整性安全策略模型
控制信息在存储、处理、传输（包括IPC通讯）时的完整性。
在系统内部传输时，完整性标签随数据一起流动。低完整性数据不能插入、覆盖到高完整性数据中
基于密码的数据机密性、完整性保护
完整性保护的其他方面
完整性检测工具
从磁盘、文件系统、文件三个层次检测
磁盘、文件系统两个层次恢复
安全机制设计时支持异常时的操作、数据回退
保证完整性不降低

标准要求的细化——
用户数据的机密性、完整性保护(续)
其它机密性保护要求
剩余信息保护
针对主体：非授权用户
针对对象
•磁盘文件、堆上内存、IPC对象、特殊设备文件等
清除时机
•返还时清除、分配时清除
存储器保护
目的：用户进程间、用户进程与系统之间不相互干扰
防止非法用户访问
逻辑隔离法
•界限地址寄存器法、内存标志法、锁保护法、特征位保护法
•读/写、只读

标准要求的细化——可信路径
实现本地终端登录过程中用户原发的可信路径保护
针对远程登录过程，提供SSOOS控制范围内可信路
径保护。

标准要求的细化——SSOOS自身安全保护
物理安全保护
提供针对物理攻击的检测工具、自动报告机制、攻击自动响应机制
运行安全保护
安全结构明确定义并保护
提供有效的安装机制
初始安装时完成前，用户及管理员的安全策略属性到位，安全机制在用户使用前使能到位
后续提供升级配置参数的安装机制，配置参数升级后，用户使用前，安全策略属性到位，安全机制生效
系统中的实用程序只能由系统管理员修改、替换
提供补丁发布、管理、使用机制
系统存在普通操作模式、维护模式
系统应提供安全运行状况自测试机制
系统提供失败恢复机制
能够控制和审计系统控制台的使用
系统为用户提供PATH设置机制

标准要求的细化——SSOOS自身安全保护
SSF数据安全保护
需要对系统中的SSF数据进行定义
口令、密钥、审计数据、SSF可执行代码、系统安全策略
针对SSF数据的输出
文件拷贝输出方式、网络输出方式
提供对数据的可用性保护（冗余性）、机密性保护、完整性保护、修改更正工具或机制
SSF数据在组件之间进行传输
需提供防止泄漏、防止修改、检查数据完整性并修正的安全保护措施
•通讯信道保护（可信路径）
•数据本身保护
将用户输入的数据与SSF数据分离传输，
•防止sql注入类似攻击
数据一致性的保证（如
avc
）

标准要求的细化——SSOOS自身安全保护
资源利用
定义发生故障时，系统仍能维持正常运行的故障列表。
资源达到预定使用下限的检测及报警
对系统资源提供列表
提供资源优先级管理、最大配额管理
以用户、用户组为单位
系统为软件、数据提供备份、复原机制
复原能够复原到指定的同步点。
系统要提供用户可访问资源的历史记录。
系统要提供硬件、固件自检机制
该机制在初始化时要进行自检
管理员可以通过工具进行自检。

标准要求的细化——SSOOS自身安全保护
SSOOS访问控制
系统提供会话管理机制：
根据进入时间、进入地点、进入方式，控制是否可以建立会话。
限制单个用户、所有用户与系统建立会话的最大数量。
如果用户以某种方式与系统建立会话尝试连续失败，则
•终止用户建立会话的尝试。
•限制用户再以这种方式与系统建立会话。（如进行用户UKEY锁定
）
定义时限，如果与系统建立会话的用户在时限内不与系统进行交互，则系统自动断开会话。
为用户提供会话锁定机制，允许用户在离开终端时锁定会话，然后通过强化口令认证用户。
成功建立会话后，应向用户显示：
日期、时间、来源、上次成功登录情况。
上次成功登录以来身份鉴别失败的情况。
口令到期天数。

大纲
系统保护需求描述
系统运行环境分析
安全操作系统开发方案设计系统安全保护方案设计

系统安全假设
物理环境假设
物理设备存放在受保护的环境中
如：机房，只有特殊人员能够直接物理访问
人员假设
承担系统管理工作的人员
能够胜任自己的工作
能够根据相关指南文档中的操作规程实施自己的管理行为
能够在善意的环境下协同工作
系统中的用户
能够妥善在线下保管自己的机密信息
外部授权程序假设
系统之外的组织管理层次
有明确的授权程序为用户授予安全属性
有明确的授权程序为系统中的敏感信息、外设赋予安全属性
有明确的授权程序确定用户对敏感信息的访问权限。

系统安全假设
基础系统代码安全假设
虚拟监控器：
本身体量小、内部复杂度低，假设其代码安全，无安全缺陷，能够保证自身代码的完整性，完全可信。
内核代码：
经裁剪后的代码逻辑可信，经代码审查、代码分析后无缺陷代码存在。
系统初始化服务程序、系统管理工具、系统服务程序：
能够按照设计的流程正确完成其功能，代码逻辑可信。
问题
假设是否成立？

系统的主体
主体：发出动作的实体
用户：
用户名、UID
系统中的事件，都直接（执行程序）或间接（通过配置指令）由用户发起
进程：
PID、可执行程序名
用户的所有事件都要通过进程来处理，它代表用户对客体资源进行访问
socket
没有全系统内用户可使用的标识
由进程创建，作为进程的延伸发送、接收信息
是否还有其它主体？

系统的客体
接受动作的实体
进程
相对于创建、访问、管理该进程的用户或其他进程是客体
文件
在磁盘文件系统和伪文件系统中
包括目录、普通文件、软硬链接文件等
文件以文件系统挂载点+文件路径或inode节点号进行标识
ext2/ext3/sysfs/proc/tmpfs/devpts/mqueue/iso9660等
文件系统
是文件的承载体
文件系统客体以设备名称、挂载点进行标识
IPC对象
共享内存对象、信号量对象、消息队列对象、FIFO对象
Socket
相对于创建、访问、管理socket的进程，socket是一个客体
是否还有其它客体？

系统的输入方式
输入：
挂载文件系统
从挂载（mount
）的磁盘或分区里读取数据到本地文件（包括复制、移动文件到本地），该文件作为输入对象
读取光盘上的文件，该光盘和文件作为输入对象
挂载（mount
）系统外的磁盘或分区，该磁盘或分区作为输入对象
远程文件传输
从远程系统传输（scp、ftp、http）数据到本地文件，该文件作为输入对象

系统的输出方式
输出：
磁盘输出
向挂载（mount
）的磁盘或分区里写入（包括复制、移动、修改等）文件，该文件作为输出对象
网络输出
通过网络协议从本地传输文件到远程（scp、ftp上传、http上传），该文件作为输出对象
打印输出
通过打印机打印文件，打印出来的页面作为输出对象

系统的失败及故障
系统故障
系统硬件故障：
包括系统CPU、主要磁盘、内存故障，也包括可插拔硬件、外设故障。
系统资源耗尽故障：
指CPU、内存、硬盘等资源被过分使用，无法对新的用户请求进行响应。
外部资源故障：
外部突然断电，系统异常终止；外部网络中断，向外服务终止。

系统的失败及故障
系统失败
系统重要文件数据丢失
如：内核、关键配置文件、引导区等，系统无法正常提供服务。
系统安全使用、配置失当
安全机制无法根据组织策略实施。
系统服务异常终止
管理员无法在正常模式下进行修复。
应用服务异常终止或使用失当
无法正常提供服务
系统受到外部攻击
关键实用程序异常、配置错误。

系统运行模式
系统安装及初始化模式
安装
使用安装光盘，进行系统的初始安装、引导区修复、系统配置升级的过程
初始化
系统开机启动到用户可通过本地终端、远程服务与系统进行交互之间的过程
也包括系统在正常运行模式与系统维护模式之间进行切换的暂态过程，以及系统关闭、重启的过程
系统处于准备状态，系统安全机制不保证处于实施状
态，网络也处于准备状态中

系统运行模式
系统维护模式
只有系统管理员才可以登录
执行各种系统维护操作
系统恢复，磁盘一致性、完整性检查，文件系统完整性检查、安全策略配置、系统升级等工作
系统网络自动断开，管理员只能通过本地终端对系统进行操作
各种安全控制机制全部失效
普通用户
无法通过任何手段对维护模式下的系统进行访问
系统不向外提供任何应用服务

系统运行模式
系统正常运行模式
用户
可以同时与系统建立一个或多个访问会话
每个用户的操作受系统中实施的安全策略和对应的安全机制控制
任何用户都不可能旁路系统中实施的安全机制
应用服务
系统对外提供的应用服务正常开启并提供服务

大纲
系统保护需求描述
系统运行环境分析
安全操作系统开发方案设计系统安全保护方案设计

安全保护方案原理框图

面向用户的安全保护方案设计
涉及用户进入到退出系统的全过程
登陆未完成之前
用户通过本地、远程方式向系统提出会话建立请求
系统在自身与用户间建立可信
路径
可信路径对交互过程提供机密性、完整性保护
主客体进入系统
系统为用户提供身份标识鉴别
机制
•以便保证登录系统的用户身份的真实可靠性
系统对系统中的主体客体进行正确的标记
•保证主客体具有正确的安全属性
在系统中执行操作
系统根据安全策略，针对主体对客体的访问请求进行访问控制仲裁
。
•为适应不同来源的安全需求，系统定义了自主访问控制、强制访问控制两种访问控制机制

面向用户的安全保护方案设计（续）
用户操作跟踪
对系统中主体对客体成功、不成功的访问进行跟踪，
系统提供安全审计
机制
并提供基于审计日志的自动响应机制
用户数据保护
针对用户访问后保存在系统中的信息，
我们提供用户数据的机密性
、完整性保护
机制
系统环境保护
在一个多用户的系统环境中，针对进程提供资源可用性保护机制

面向系统自身保护的系统安全保护域设计
虚拟监控器→内核态系统→用户态程序
基于虚拟监控器的内核代码完整性保护
系统加载内核及内核模块时，将其代码段页表置为只读方式
内核通过hypercall将相关的代码地址及大小通知虚拟监控器
虚拟监控器维护一个标识内核及内核模块代码段的列表
由于所有修改页表的操作都属于特权操作，所以所有修改页
表的企图都会被虚拟监控器截获
虚拟监控器检查内核及内核模块代码段列表，如果要修改的
页表在此范围内，则禁止页表的修改。
所以在系统运行模式下，内核代码段一直处于只读状态，不
能被rootkit篡改。

面向系统自身保护的系统安全保护域设计
内核访问监控器
基于LSM进行
实现了访问监控器的接口，能够对所有主体对客体的访问进行仲裁
对原有LSM进行修改，支持两种以上模块并存
•支持多安全模块安全标记的存放
•支持多安全模块同时实施时的裁决逻辑（拒绝优先）
•支持多安全模块注册回调函数的框架
•支持多安全模块加载、卸载
提供两个访问控制模块
•selinux：
–基于Flask体系结构，实现了基于TE模型、IBAC模型、RBAC模型、MLS的强制访问控制
•biba：
–用于完整性保护，是系统中的主安全模块
修改系统中的特权控制，支持三个管理员
三个管理员的标识在内核中写定

面向系统自身保护的系统安全保护域设计
系统各访问控制机制分工
TE控制+特权控制
系统中的管理员三权分立管理、用户态程序的执行域隔离
•控制：TE完成
•特权控制：将一个root，放松为三个管理员
MLS
基于BLP实现用户数据的机密性保护
通过定义标记范围的方式，实现对BLP模型的超越
•可信主体
–执行备份恢复、安全标记设置等管理操作的进程
–在自身设计逻辑中即实现了必要的信息隔离的服务程序
•可信客体（实质为容器客体）
–如：通过多实例化进行隔离的/tmp目录
–如：/dev/zero等实际不会造成信息流动的设备文件
BIBA
实现用户数据的完整性保护
也实现类似的超越机制

面向系统自身保护的系统安全保护域设计
系统用户态程序的运行域隔离与权限控制
基于tripwire
完成用户态程序的完整性检测
以init为中心的系统初始化程序
运行在系统安装和初始化模式
可认为这些进程是可信进程，能够将系统带入正常模式
系统服务
如login/crond/syslogd/sshd
需要与系统中的所有用户进行交互
参考其执行逻辑
•通过配置TE控制策略，保证这些服务能够在一个受限的安全域之中执行
代替用户执行操作时
•会自动切换自己的安全上下文，使自己能够在一个与用户身份相关的、更加受限的安全域中运行

面向系统自身保护的系统安全保护域设计
系统用户态程序的运行域隔离与权限控制（续）
系统管理工具
TE+特权限制
只能在一个特定的安全域中，由特定的管理员执行
只能访问其管理任务内的系统配置或资源
系统实用程序
以用户为单位，划分不同的执行安全域
辅助用户对属于自己的信息、资源进行管理
应用服务
根据其执行逻辑，被限制在一个特定的执行域中进行操作
部分应用程序可作为安全敏感程序，根据子操作所需要完成的功能，切换自己的安全上下文，防止缺陷引入的系统威胁

面向系统自身保护的系统安全保护域设计
系统用户态程序的运行域隔离与权限控制（续）
管理员
系统管理员、安全管理员、审计管理员
职责隔离
•安全管理员
–进行安全标记的管理、安全策略的制定
•审计管理员
–审计系统的管理、审计策略的制定、安全日志的查看
•系统管理员
–其它管理工作
最小特权
•只能通过特定的方式对特定的管理对象进行管理，不被授予额外的特权
职责相互制约
•由一个操作序列组成的系统关键管理操作，必须由多个管理员的参与才能完全执行

大纲
系统保护需求描述
系统运行环境分析
安全操作系统开发方案设计系统安全保护方案设计

系统安全机制划分框图

系统安全机制分类说明
会话建立阶段保护机制
包括的安全机制
用户发起会话建立请求后的可信路径机制
用户管理机制
用户身份鉴别机制
基于会话的访问控制机制
说明
会话建立阶段结束后，用户才以真实的身份被系统所标识，从而能为自己在系统中的行为负责
访问监控器
安全策略
系统安全策略、用户对属于自己的客体定义的安全保护策略
包括的安全机制
基于系统自主访问控制框架实现的自主访问控制机制
基于LSM框架实现的强制访问控制框架
SELinux强制访问控制机制、BIBA完整性保护机制、系统特权控制机制

系统安全机制分类说明（续）
事后审计与响应
根据管理员定义的审计策略记录安全事件审计日志并进行自动响应
包括的机制
安全审计机制
审计自动响应机制
基础系统的其他安全增强机制
针对系统的一些固有的安全威胁，有针对性地实现的对系统的安全增强
包括的机制
基于虚拟监控机的内核完整性保护、客体重用机制、资源使用限制机制、地址空间随机化机制
安全支持实用程序
包括系统完整性检测与修复工具、密码工具、系统维护模式及维护机制、系统输入输出工具

系统安全增强开发工作
系统安全机制改造设计与开发
包括各机制核心模块的设计与开发、安全机制相关管理工具及系统服务的设计与开发等
系统服务的安全增强
在系统中引入新的安全机制后，需要对系统服务进行安全增强
如crond中针对强制访问控制的安全上下文切换
系统登录服务中的安全上下文切换、审计点的添加
cupsd的标记打印支持
安全敏感的系统实用程序改造
引入新的安全机制后，需要对现有系统实用程序的功能进行扩展
ls、ps、vi、mv、tar
、cp、find、vdir
、stat、id、dir
、pstree、mkdir
、mknod、mount、crontab、mkfifo、lsof
、usermod、useradd、mksock、killall等
安全敏感应用服务的改造
如scp服务的带标记传输等

系统安全集成的相关工作
系统各安全机制相关代码的合并及冲突解决
系统安全机制的集成
系统各安全机制相关管理事件、裁决事件审计点的添加
各安全机制对系统维护模式的支持
各强制访问控制模块初始化阶段的相互协调
安全机制引入后系统原有程序兼容性问题的解决
配合系统独立脆弱性分析，进行系统安全缺陷的修复，本
系统中主要针对如下方面进行修复
基础系统已发现的安全缺陷的修补
基于动态代码分析的系统内存泄漏bug的修补
基于静态代码分析的内存空指针引用bug的修补
独立脆弱性分析中其他问题的修补
系统隐蔽信道限制代码修补

系统安全配置
系统强制访问控制策略配置
TE控制策略的定制实现系统的管理员分权管理，进行职责分离、最小特权控制实现系统相关可信进程的安全域隔离及特权限制实现应用服务的安全策略配置，在支持其正常功能完成的同时，对其在系统中的行为进行限制
MLS策略配置基于selinux
中的多级安全控制机制，定制在系统中实施的MLS裁决逻辑•实现不上读、同级写的安全策略，支持标签范围，并依据标签范围实施MLS强制访问控制配置系统的多实例化策略•多实例化目录至少包括系统中的/tmp目录为系统中的的用户、文件配置默认MLS标记效果•一般主客体：严格BLP•可信进程、多实例化目录、不会引起信息流动的客体：标签范围实现超越
BIBA策略为系统中主客体定义安全标签•缺省安全标签都为高

系统安全配置
审计策略配置
配置缺省审计服务参数
配置缺省的审计策略
配置基于审计的自动响应机制的策略
身份标识与鉴别机制配置
PAM模块的配置
用户会话控制机制的控制。
可信路径机制的配置
系统关键文件9bit
位权限的配置
tripwire完整性检测策略的配置：
保证虚拟监控器、内核、内核模块代码及配置的完整性，
保证系统其他重要服务程序、程序安全属性的完整性。

系统安装及初始化改造
安装过程
系统安装过程中，设定三个管理员的登录口令，并为管理员提供UKEY初始化的机制。
在安装过程中，为用户提供升级配置参数的机制。
在安装过程中，为用户提供打标记、tripwire初始化的机制。
在安装过程中，设定系统初始配置文件，保证各种安全机制在系统启动后即可生效。
初始化过程
根据安全需求对系统服务进行裁剪
在系统初始化过程中进行selinux/biba/审计/可信路径的使能、策略加载。
在grub中，为用户提供进入维护模式、正常运行模式的选单，系统缺省进入正常运行模式

分模块说明——用户标识与鉴别
普通用户管理功能
PAM框架
基于口令的身份认证用户管理
UID、用户名的唯一性控制
身份鉴别
口令认证
添加口令强度检查
实现基于UKEY的身份鉴别及管理机制
安全属性切换
实现SSOOS访问控制功
能
添加审计功能

分模块说明——用户标识与鉴别
认证管理
与用户交互完成认证
过程
账号管理
检查经认证的用户是
否可登陆系统
会话管理
设置代表用户的会话、
终端的安全属性
口令管理
管理用户账号的验证
数据

分模块说明——用户标识与鉴别
为用户颁发USBkey
的过程
说明：
读取、记录序列号是
为了对系统中使用的
USBkey进行有效的
管理
用户另外需配置使用
Ukey进行认证的用
户列表

分模块说明——用户标识与鉴别
UKEY
远程认证从前期口令认证中获得

分模块说明——用户标识与鉴别
用户标识唯一性改造
通过修改用户管理相关命令实现
useradd、usermod、userdel
groupadd、groupmod、groupdel
系统中的UID、用户名永久保存
删除用户时，只进行记录的删除标识
添加、修改UID、用户名时进行排重检查
强化口令管理
通过PAM模块实现

分模块说明——用户标识与鉴别
SSOOS访问控制
PAM实现部分
其他部分
超时未使用时限后断开会话
•本地：设置security.misc.tty_timeout
•远程：sshd_config中的ClientAliveCountMax和ClientAliveInterval
锁定用户键盘：vlock命令实现功能说明PAM模块名作用位置配置文件、配置项
限制并发会话数量pam_limits会话管理/
etc/security/
limits.confmaxsyslogins
成功登陆后显示登陆相关信息pam_lastlog会话管理显示上次成功登录的日期、时间、来源，显示上次成功访问系统以来身份鉴别失败的次数，显示最后一次身份鉴别失败的日期、时间、来源
限制用户登陆条件pam_time账号管理用户登录用户名、主机名或域名、网络地址或网段
、登录终端号

分模块说明——可信路径
SAK机制基于SAK机制
设计本地可信路径机制
可信路径状态下，不允许与登录过程无关的进程对终端进行访问。
以ssh方式从远程登录时
系统已经基于SSL协议实现了远程可信路径。
提供系统程序原发的可信路
径机制。
提供可信路径的配置及初始
化
部署与本身功能相关的审计
点。

分模块说明——可信路径
虚拟终端驱动上层读写程序本地字符方式工作程序（如login）
终端输入队列
键盘中断程序显卡驱动显示输出读写终端
用户输入底层键盘驱动截获设定的按键序列
触发虚拟终端层的可信路径准备程序：1.获得当前终端号2.获取当前终端所有进程；或通知显卡驱动再虚拟出一个空白终端3.通知Init程序准备用户认证环境
1.Init程序准备用户认证环境2.将该终端上新创建的进程及其子进程都注册为该终端上的可信路径进程
1.用户认证期间除可信路径之外的进程对该终端的访问都被拒绝2.用户认证过程结束后，通知内核，终端的可信路径状态被终止，恢复正常

分模块说明——自主访问控制
基本DAC
9bit位自主访问控制
ext2/ext3 ACL机制将DAC扩展到IPC对象、其
他文件系统对象
修改系统的chown/
chmod，
使得在正常模式下，系统管
理员不能修改普通用户文件
的访问控制属性。
实现与自主访问控制相关的
审计点，及相关的审计事件
定义机制。

分模块说明——自主访问控制

分模块说明——自主访问控制
分模块说明——自主访问控制

分模块说明——自主访问控制
ACL初始化

分模块说明——强制访问控制
原有LSM框架
SELinux安全模块LSM框架对多安全模块的支持
BIBA安全模块
访问控制机制文件IPCsocket
BIBA标记
策略定义机制
SELinux策略定义
管理员职责隔离、最小特权、管理员相互制约
mls策略
多实例化
标记打印输出

分模块说明——强制访问控制
LSM框架修改
钩子点
内核对象的安全域
主体与客体
安全模块初始化

分模块说明——强制访问控制（SELinux）

分模块说明——强制访问控制（三权分立）
功能/角色系统管理员安全管理员审计管理员用户管理添加、删除、修改用户权限配置对系统正常运行进行审计应用管理添加、删除、修改应用权限配置
常规服务启/
停服务正常运行策略配置网络服务启/
停审计服务启停审计工具auditctl/autrace/ausearch/aureport执行
审计工具auditctl -e执行
审计配置文件audit.rules/auditd.conf /matchrule.conf读写
审计配置文件
audit.rules/auditd.conf
读写功能/角色系统管理员安全管理员审计管理员SELinux服务启停SELinux工具semanage/runcon/ chcon/fixfiles/setfiles/ resorecon/matchpathcon/ load_policy执行
SELinux策略文件/etc/selinux/nfsark/*读写
biba服务启停biba 工具setbiba/ policy_parser/loadbiba/enablebiba执行
biba 策略文件/etc/biba/读写

分模块说明——
强制访问控制（MLS BIBA
裁决基本逻辑）
MLS
BIBA

分模块说明——强制访问控制(mls)
MLS
作为SELinux的一部分实现
多实例化目录
针对/tmp等共享目录的安全访问提供
基于pam_namespace实现，在会话管理阶段实现
配置实例：/etc/security/namespace.conf
•/tmp/tmp/tmp-inst/     level  root,secadm
有什么问题？
文件安全标记的打印输出
发出打印文件的客户端标签同文件标签
CUPS作为一个可信进程，获取对方标签打印输出

分模块说明——强制访问控制（BIBA
设计）

分模块说明——强制访问控制（BIBA
现有支配关系）
普通主体客体
可信主体、可信客体

分模块说明——强制访问控制（BIBA
控制的实现）
1、biba_can_read= biba_dominate(O, S) 
2、biba_can_write= biba_dominate(S, O) 
3、biba_can_exec= biba_dominate(O, S) 

分模块说明——强制访问控制（BIBA
策略）

分模块说明——强制访问控制

分模块说明——安全审计
系统安全审计框架
审计日志分发框架审计机制
增加安全审计事件
修改审计策略定制机制
为审计增加备份与恢复机制
审计日志中添加日志相关的主客体安全标签
增加审计策略加载的回退支持机制
增加审计日志文件的加密保护功能
修改程序，保证只有系统中的审计管理员才能执行审计策略定义、审计日志查看功能
审计的自动响应功能
审计日志自动响应机制实现基于异常事件分析、潜在侵害处理、简单攻击探测事件的。
提供控制台报警、邮件报警、违例进程终止、违例会话终止功能。

分模块说明——安全审计

分模块说明——安全审计（违例进程终止、终端终止、报警）

分模块说明——其它安全机制
基于虚拟监控器的内核完整性保护
客体重用机制
实现针对ext3磁盘文件系统文件、IPC对象的资源释放时信息擦除机制
实现堆上内存、文件系统的申请时信息擦除机制
资源使用限制机制
实现资源达到最小使用门限的自动报警机制
实现资源配额、优先级的管理
提供对资源使用的审计机制
地址空间随机化
系统维护模式及维护机制
基于系统中的单用户状态实现系统的维护模式
提供定期或手动执行的系统备份与恢复机制
实现系统硬件自检功能
系统完整性检测与修复工具
密码及系统输入输出辅助工具
文件拷贝方式、网络方式
机密性保护、完整性保护、标记的封装、数据的冗余

分模块说明——其它安全机制（客体重用）
以Glibc中实现为主
为什么内核中也要
处理
客体重用对性能的
影响

分模块说明——其它安全机制（维护模式）
通过init1实现
网络的开关
安全模块的开关
审计的开关

安全操作系统标准研讨

研讨问题（一）
GB/T 20272第三级有什么安全功能、SSOOS自身安全保
护、SSOOS设计与实现的要求？
GB/T 20272第三级与GB17859第三级两个在表述形式上
和表述内容上有何不同？试分别进行说明。其中对表述形
式上的不同，需说明其优劣及原因，对表述内容上的不同
，请举2-3条进行分析说明。
比较GB17859与GB/T 20272在第三级的身份鉴别要求，
并逐项列出两者之间的相对应的要求。
2

研讨问题答案要点
GB/T 20272第三级有什么安全功能、SSOOS自身安全保
护、SSOOS设计与实现的要求？
安全功能
身份鉴别
自主访问控制
标记
强制访问控制
数据流控制
安全审计
用户数据完整性
用户数据保密性
3

身份鉴别
用户标识
基本标识
唯一性标识
用户鉴别
数字证书鉴别
鉴别信息的不可见性：传输加密
鉴别时间及失败次数阈值设置
用户-主体绑定
用户进程与所有者用户相关联
系统进程动态地与当前服务要求者用户相关联
4

自主访问控制
由客体的所有者自主地规定其所拥有客体的访问权限
访问控制策略
定义访问控制属性，并保护这些属性。主体的访问控制属性至少应
有：读、写、执行等；客体的访问控制属性应包含可分配给主体的
读、写和执行等权限；
访问控制功能
允许命名用户以用户的身份规定并控制对客体的访问，并阻止非授
权用户对客体的访问
访问控制范围
访问控制粒度
更细粒度的自主访问控制，将访问控制的粒度控制在单个用户
对系统中的每一个客体，都应能够实现由客体的创建者以用户指定
方式确定其对该客体的访问权限
与二级的要求相同
5

标记
对SSOOS控制范围内的主体和客体敏感标记
主体标记
客体标记
标记的输出
当信息从SSOOS控制范围之内向SSOOS控制范围之外输出时，可带有或不带有敏感标记
标记的输入
当信息从SSOOS控制范围之外向SSOOS控制范围之内输入时，应通过标记标明其敏感标记
二级无此要求，敏感标记构成多级安全模型的的属性库
6

强制访问控制策略
由系统按照明确的规则，决定主体对客体访问权限
访问控制策略
系统安全员统一管理与强制访问控制等安全机制有关的事件和信息，系统管理员、系统安全员和系统审计员三权分立
访问控制功能
访问控制范围
系统对用户的安全控制包含从用户进入系统到退出系统的全过程，对客体的控制范围涉及操作系统内部的存储、处理和传输过程
访问控制粒度
访问控制环境
运行于网络环境的分布式操作系统，应统一实现强制访问控制功能
运行于网络环境的多台计算机系统上的网络操作系统，在需要进行统一管理时，应考虑各台计算机操作系统的主、客体安全属性设置的一致性
二级无此要求7

数据流控制
在以数据流方式实现数据流动的信息系统中，应采用数据
流控制机制实现对数据流动的安全控制，以防止具有高等
级安全的数据信息向低等级的区域流动
二级无此要求
8

安全审计
安全审计的响应
提供审计日志
实时报警生成
安全审计数据产生
可审计事件登录及建立会话的过程使用系统接口系统数据库管理的改变对客体的创建、访问、管理、操作和删除等操作系统管理员、系统安全管理员、审计员、一般操作员所实施的操作
对于每一个事件，其审计记录应包括：事件的日期和时间、触发事件的用户、事件的类型、事件成功或失败等
对于身份鉴别事件，应记录请求的源（如末端号或网络地址）
对于创建和删除客体事件，应记录客体的名字和安全属性
9

安全审计（续）
安全审计分析
潜在侵害分析
基于异常检测
安全审计查阅
基本审计查阅
有限审计查阅
可选审计查阅
安全审计事件的管理
审计过程的保护审计打开和关闭机制受到系统管理员的授权限制强制访问控制机制保护审计相关的程序、数据和进程
安全审计事件选择根据属性（客体身份、用户身份、主体身份、事件类型）选择可审计事件
安全审计事件存储受保护的审计踪迹存储审计数据的可用性确保10

用户数据完整性
完整性
为主体和客体设置完整性标签，并建立完整性保护策略模型
存储数据的完整性
基于密码技术的数据完整性保护
完整性检测和恢复
传输数据的完整性
保证操作系统内部传输的用户数据完整性
完整性标签应随数据一起流动，系统应保证低完整性的数据不能插入、覆盖到高完整性的数据。
处理数据的完整性
回退功能
保证在处理过程中不降低数据完整性的级别。
11

用户数据保密性
保密性
基于密码技术的存储数据和传输数据的保密性保护
客体安全重用：系统动态分配与管理资源时，客体资源中的
剩余信息不应引起信息的泄露
确保非授权用户不能查找使用后返还系统的记录介质中的信息内容；
确保非授权用户不能查找系统现已分配给他的记录介质中以前的信息内容；
存储器保护
防止用户进程间、用户进程和系统之间以及用户之间的互相干扰。
防止非法用户访问
对被保护的存储单元的操作提供各种类型保护，最基本“读/写”和“只读”
逻辑隔离法：界限地址寄存器保护法、内存标志法、锁保护法和特征位保护法
12

研讨问题答案要点
GB/T 20272第三级有什么安全功能、SSOOS自身安全保
护、SSOOS设计与实现的要求？
GB/T 20272第三级SSOOS自身安全保护
SSF（SSOOS安全功能）物理安全保护
SSF运行安全保护
SSF数据安全保护
资源利用
SSOOS访问控制
13

GB/T 20272第三级SSOOS自身安全保护
SSF物理安全保护
物理攻击检测
物理攻击自动报告
SSF运行安全保护
系统无“后门”
安全结构明确定义并保护
域分离
隔离操作系统程序和用户程序
区分普通操作模式和系统维护模式
提供各种保证系统安全运行的机制
有效的安装机制
系统恢复机制
安全运行状况自测试机制
系统控制台使用情况的控制和审计机制
为用户提供PATH设置机制14

GB/T 20272第三级SSOOS自身安全保护
SSF数据安全保护
输出SSF数据的可用性、保密性和完整性
SSF数据传输的基本保护、数据分离传输、数据完整性保护
SSF间的SSF数据的一致性和SSOOS内SSF数据复制的一致性
保护
资源利用
容错：系统出现某些确定的故障时，SSF也能维持正常运行
服务优先级：有限服务优先级
资源分配：最大限额资源分配
资源达到预定使用下限的检测及报警
提供用户可访问的系统资源的修改历史记录
软件及数据备份和复原
硬件、固件自检机制15

GB/T 20272第三级SSOOS自身安全保护
SSOOS访问控制
会话建立：根据相关的安全属性，SSF允许或拒绝用户与
SSOOS建立会话
属性包括：时间、进入方式、地点、网络地址或端口
建立SSOOS会话之前，鉴别用户的身份
当用户鉴别过程失败次数达到一定门限时，系统退出登录过程并终止与用户的交互
多重并发会话限定
所有多重并发会话的基本限定
每个用户的多重并发会话的限定
会话锁定
定义时限
提供锁定用户键盘的机制，键盘开锁过程应要求验证用户
登录成功后，记录并显示日期、时间、来源和历史访问数据
16

研讨问题答案要点
GB/T 20272第三级有什么安全功能、SSOOS自身安全保护、
SSOOS设计与实现的要求？
SSOOS设计与实现的要求
配置管理分发和操作开发文档要求生存周期支持测试脆弱性评定
17

SSOOS设计与实现的要求
配置管理
配置管理能力
实现对版本号、配置项、授权控制等方面的要求
配置管理自动化
部分配置管理自动化
配置管理范围：跟踪配置项来保证其完整性
SSOOS配置管理范围：SSOOS的实现表示、设计文档、测试文档、用户文档、管理员文档以及配置管理文档
问题跟踪配置管理范围：特别强调对安全缺陷的跟踪
在系统的整个生存期，应由一个软件配置管理系统（技术、
物理和保安规章三方面结合）处于保持对改变源码和文件的
控制状态
18

SSOOS设计与实现的要求
分发和操作
分发
以文档形式提供对SSOOS安全地进行分发的过程修改检测
操作
安装、生成和启动过程，日志生成安全漏洞的说明、定期检查、修改和解决
开发
非形式化功能说明、完全定义的外部接口、非形式化安全策略模型、安全加强
的高层设计、描述性低层设计、层次化、SSF完全实现、非形式化对应性说明
安全要求
保证数据的完整性、基于密码技术的敏感数据机密性定期检查并解决潜在的安全缺陷，关闭或取消所有的后门在操作系统开发敏感阶段，应保持一个安全环境
文档要求
以书面形式向用户提供关于软件所有权保护法律的指南对文档中的安全缺陷进行书面检查，并把结果告知用户19

SSOOS设计与实现的要求
文档要求
用户文档
系统管理员文档
安全管理员文档
生存周期支持
按标准的生存周期模型和明确定义开发工具的要求进行开发
提供安全措施的说明，保护SSOOS开发环境的安全
基本缺陷纠正
测试
测试范围：范围证据和范围分析
测试深度：高层设计测试和低层设计测试
功能测试：顺序的功能测试，包含测试过程中顺序依赖性的分析
独立性测试：抽样独立性测试
测试应全面，并提供测试文档20

SSOOS设计与实现的要求
脆弱性评定
防止误用：防止对SSOOS以不安全的方式进行使用或配置
而不为人们所察觉
文档检查分析确认
SSOOS安全功能强度评估
通过对安全机制的安全行为的合格性或统计结果的分析，证明其达到或超过安全目标要求所定义的最低强度
脆弱性分析：能够发现由缺陷带来的威胁
独立穿透测试，确定SSOOS可以抵御的低攻击能力攻击者发起的攻击
21

表述形式上的不同：
GB/T 20272第三级的内容分为以下四部分
安全功能
SSOOS自身安全保护
SSOOS设计与实现的要求
SSOOS安全管理
GB17859第三级没有这个分类

表述形式上的不同：
功能要求
安全功能
SSOOS自身安全保护
安全保障
SSOOS设计与实现的要求
SSOOS安全管理
23

表述形式上的不同：
安全功能（security function）
为实现安全要素的要求，正确实施相应安全功能策略所提供
的功能
安全保障（security assurance）
为确保安全要素的安全功能达到要求的安全性目标所采取的
方法和措施
24

这样表述的优点：
安全功能与安全保障针对了不同的群体
安全功能主要针对系统的使用者
安全保障主要针对系统开发者和测试者
25

表述内容的不同：
GB17859是比较早的版本，其制定时期的使用环境、相关技
术发展及对系统的理解程度都与GB/T 20272制定时的情
形有了很大变化
技术进步
数字证书鉴别
使用环境的改变
网络操作系统
系统理解的深入
用户-主体绑定
26

GB17859在第三级的身份鉴别：包含内容广，但不详细计算机信息系统可信计算基初始执行时，首先要求用户标识自己的身份，而且，计算机信息系统可信计算基维护用户身份识别数据并确定用户访问权及授权数据。计算机信息系统可信计算基使用这些数据鉴别用户身份，并使用保护机制（例如：口令）来鉴别用户的身份；阻止非授权用户访问用户身份鉴别数据。通过为用户提供唯一标识，计算机信息系统可信计算基能够使用户对自己的行为负责。计算机信息系统可信计算基还具备将身份标识与该用户所有可审计行为相关联的能力。GB/T 20272在第三级的身份鉴别：更详细具体用户标识凡需进入操作系统的用户，应先进行标识（建立账号）；操作系统用户标识应使用用户名和用户标识（UID），并在操作系统的整个生存周期实现用户的唯一性标识，以及用户名或别名、UID等之间的一致性用户鉴别采用强化管理的口令鉴别/
基于令牌的动态口令鉴别/
生物特征鉴别/数字证书鉴别等机制进行身份鉴别，并在每次用户登录系统时进行鉴别；鉴别信息应是不可见的，在存储和传输时应按GB/T 20271-2006中6.3.3.8的要求，用加密方法进行安全保护；通过对不成功的鉴别尝试的值（包括尝试次数和时间的阈值）进行预先定义，并明确规定达到该值时应采取的措施来实现鉴别失败的处用户-主体绑定将用户进程与所有者用户相关联，使用户进程的行为可以追溯到进程的所有者用户；将系统进程动态地与当前服务要求者用户相关联，使系统进程的行为可以追溯到当前服务的要求者用户27

研讨问题（二）
GB/T 20272的身份鉴别、安全审计在各级之间的不同之
处？试举例说明其意义。
GB/T 20272的脆弱性评定、开发在各级之间的不同之处
？试举例说明其意义。
随着科技的飞速发展，操作系统的管理对象和使用环境都
发生了很大的变化，由此带来了一些新的安全隐患和问题
，这些问题无法用GB/T 20272来囊括或解决，试举例说
明。
28

研讨问题答案要点
GB/T 20272的身份鉴别、安全审计在各级之间的不同之
处？试举例说明其意义。
GB/T 20272的脆弱性评定、开发在各级之间的不同之处
？试举例说明其意义。
特点
随着安全功能等级的升高，相应的安全功能技术要素也越来越多，要求越来越高
这些要求为系统的安全运行提供越来越高的安全性保障
29

身份鉴别
第一级：身份鉴别的初级要求
基本标识、基本鉴别、鉴别信息管理、鉴别失败处理、用户主体绑定
第二级（相对于上一级增加的要求）
标识（唯一性标识、用户或别名和UID等之间的一致性）、鉴别（强化管理的口令鉴别、基于令牌的动态口令鉴别等机制）
第三级（相对于上一级增加的要求）
鉴别（生物特征鉴别/数字证书鉴别等机制）、鉴别信息管理（在存储和传输时用加密方法进行子集信息安全保护）
第四级（相对于上一级增加的要求）
鉴别（强化口令管理和/
或生物特征鉴别和/
或数字证书等相结合的方式，
采用多鉴别机制）、鉴别信息管理（在存储和传输时用加密方法进行完全信息安全保护）
第五级（相对于上一级增加的要求）
鉴别（重新鉴别）

安全审计
安全审计的响应
安全审计数据产生
安全审计分析
安全审计查阅
安全审计事件的管理

安全审计
安全审计的响应
第一级
无要求
第二级（相对于上一级增加的要求）
提供审计日志
第三级（相对于上一级增加的要求）
实时报警生成
第四级（相对于上一级增加的要求）
违例进程终止
第五级（相对于上一级增加的要求）
服务取消
用户账号断开与失效

安全审计
安全审计数据的产生
第一级无要求
第二级（相对于上一级增加的要求）可审计事件登录及建立会话的过程使用系统接口系统数据库管理的改变对客体的创建、访问、管理、操作和删除等操作系统管理员、系统安全管理员所实施的操作对于每一个事件，其审计记录应包括：事件的日期和时间、触发事件的用户、事件的类型、事件成功或失败等对于身份鉴别事件，应记录请求的源（如末端号或网络地址）对于创建和删除客体事件，应记录客体的名字和安全属性
第三级（相对于上一级增加的要求）可审计事件：系统管理员、系统安全管理员和一般操作员实施的操作
第四级（相对于上一级增加的要求）对于创建和删除客体事件，应记录客体的名字、安全属性和完整性标签
第五级（相对于上一级增加的要求）无

安全审计
安全审计分析
第一级
无要求
第二级（相对于上一级增加的要求）
潜在侵害分析
第三级（相对于上一级增加的要求）
基于异常检测
第四级（相对于上一级增加的要求）
简单攻击探测
第五级（相对于上一级增加的要求）
复杂攻击探测

安全审计
安全审计查阅
第一级
无要求
第二级（相对于上一级增加的要求）
基本审计查阅
有限审计查阅
第三级（相对于上一级增加的要求）
可选审计查阅
第四级（相对于上一级增加的要求）
无
第五级（相对于上一级增加的要求）
无

安全审计
安全审计事件的管理
第一级
无要求
第二级（相对于上一级增加的要求）
审计过程的保护：审计系统被授权的管理员打开和关闭，自主访问控制
安全审计事件选择：根据属性（客体、用户、主体、事件）选择可审计事件
安全审计事件存储：受保护的审计踪迹存储
第三级（相对于上一级增加的要求）
审计过程的保护：强制访问控制
安全审计事件存储：审计数据的可用性确保
第四级（相对于上一级增加的要求）
安全审计事件存储：防止审计数据丢失的措施
第五级（相对于上一级增加的要求）
无

脆弱性评定
脆弱性评定
第一级
无要求
第二级
防止误用（文档检查）、SSOOS安全功能评估、开发者脆
弱性分析
第三级
防止误用（分析确认）、独立脆弱性分析
第四级
一般隐蔽信道分析、中抵抗力分析
第五级
严格隐蔽信道分析、高抵抗力分析

开发
功能说明
安全策略模型化
高层设计
低层设计
SSF内部结构
实现表示
表示的对应性
其他要求

开发
第一级第二级第三级第四级第五级
功能说明非形式化功能说明完全定义的外部接口无变化（前两种均使用）半形式化功能说明形式化功能说明
安全策略模型化无要求非形式化安全策略模型非形式化安全策略模型半形式化安全策略模型形式化安全策略模型
高层设计描述性高层设计描述性高层设计安全加强的高层设计半形式化高层设计形式化高层设计
低层设计描述性低层设计描述性低层设计描述性低层设计半形式化低层设计形式化低层设计
SSF内部结构模块化层次化层次化复杂度最小化复杂度最小化
实现表示SSF子集实现SSF子集实现SSF完全实现SSF的结构化实现SSF的结构化实现
表示的对应性非形式化对应性说明非形式化对应性说明非形式化对应性说明半形式化对应性说明形式化对应性说明

开发
其他要求
第一级
安全要求保证数据的完整性、基于密码技术的敏感数据机密性定期检查并解决潜在的安全缺陷，关闭或取消所有的后门文档要求以书面形式向用户提供关于软件所有权保护法律的指南对文档中的安全缺陷进行书面检查，并把结果告知用户
第二级（相对于上一级增加的要求）
无变化
第三级（相对于上一级增加的要求）
安全要求：在操作开发的敏感阶段，应保持一个安全环境
第四级（相对于上一级增加的要求）
无变化
第五级（相对于上一级增加的要求）
无变化

研讨问题答案要点
随着科技的飞速发展，操作系统的管理对象和使用环境都发
生了很大的变化，由此带来了一些新的安全隐患和问题，这
些问题无法用GB/T 20272来囊括或解决，试举例说明。
使用环境发生了变化
移动环境
云环境
管理对象发生了变化
GPS接收器多次调用，导致用户隐私泄露
虚拟机安全

GB/T 20272的优缺点
GB/T 20272在每个安全功能要求上，对GB17859 进行了大
量的细化
优点：增强了标准的可操作性
举例：身份鉴别
采用强化管理的口令鉴别/基于令牌的动态口令鉴别/生物特征鉴别/数字证书鉴别等机制进行身份鉴别，并在每次用户登录系统时进行鉴别
不足：
规定太过详细，可扩展性差，某些新技术无法纳入其中
由于GB/T 20272的要求并不是可选的，所以排斥了同样满
足安全目标的其他实现方式的标准符合性以及系统的适用性
举例：身份鉴别中的行为认证（个人书写行为认证）
42

总结
通过比较学习，由浅入深地熟悉、理解操作系统安全的基
本知识
操系统安全的分级及标准囊括了操作系统安全的各个方面，
可加深对各知识点的理解
了解操系统安全的分级及标准。理解分级标准的作用
给予操作系统安全性一个衡量尺度
用户可以更明确地表述其要求
给予开发人员一个指导范例，规范开发人员开发过程
43

总结
了解GB17859与GB/T 20272标准的递进关系。了解GB/T 
20272安全保障与安全功能的分离特点
使用者、开发者、测试者有各自不同的针对点
通过比较学习，让学生由浅入深地理解安全操作系统分级
标准对安全问题的逐层强化要求
了解GB/T 20272的不足
增强了标准的可操作性的同时
可扩展性差，限制了其他可行的实现方式
44

谢谢！&问答


